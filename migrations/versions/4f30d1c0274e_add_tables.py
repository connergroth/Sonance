"""Add tables

Revision ID: 4f30d1c0274e
Revises: 8c2e68080243
Create Date: 2025-01-26 19:49:21.387829

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4f30d1c0274e'
down_revision: Union[str, None] = '8c2e68080243'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create the 'users' table
    op.create_table(
        'users',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('username', sa.String, unique=True, nullable=False),
        sa.Column('email', sa.String, unique=True, nullable=False),
        sa.Column('password_hash', sa.String, nullable=False),
        sa.Column('created_at', sa.DateTime, server_default=sa.func.now())
    )
    
    # Create the 'tracks' table
    op.create_table(
        'tracks',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('title', sa.String, nullable=False),
        sa.Column('artist', sa.String, nullable=False),
        sa.Column('album', sa.String, nullable=True),
        sa.Column('genre', sa.String, nullable=True),
        sa.Column('popularity', sa.Integer, nullable=True),
        sa.Column('audio_features', sa.JSON, nullable=True)
    )
    
    # Create the 'albums' table
    op.create_table(
        'albums',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('title', sa.String, nullable=False),
        sa.Column('artist', sa.String, nullable=False),
        sa.Column('release_date', sa.DateTime, nullable=True),
        sa.Column('genre', sa.String, nullable=True)
    )
    
    # Create the 'artists' table
    op.create_table(
        'artists',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('name', sa.String, nullable=False),
        sa.Column('genre', sa.String, nullable=True),
        sa.Column('popularity', sa.Integer, nullable=True)
    )
    
    # Create the 'recommendations' table
    op.create_table(
        'recommendations',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('user_id', sa.Integer, sa.ForeignKey('users.id'), nullable=False),
        sa.Column('track_id', sa.Integer, sa.ForeignKey('tracks.id'), nullable=False),
        sa.Column('album_id', sa.Integer, sa.ForeignKey('albums.id'), nullable=False),
        sa.Column('recommendation_score', sa.Integer, nullable=False)
    )



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
